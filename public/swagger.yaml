openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'blockchain network API'
  description: 'My own blockchain API'
tags:
  - name: individual node status
    description: blockchain, nodeurl, network..
  - name: decentralized network
    description: Creating a decentralized blockchain network
  - name: mining and synchronizing the network
    description: mine, reward, and share
  - name: consensus
    description: longest chain rule
  - name: get specific Info
    description: search certain block and transaction by Id

servers:
  - description: My own blockchain API
  - url: http://localhost:3001
  - url: http://localhost:3002
  - url: http://localhost:3003
  - url: http://localhost:3004
  - url: http://localhost:3005

paths:
  /blockchain:
    get:
      tags:
        - individual node status
      summary: get all chain that current node have
      responses:
        '200':
          description: all chains that current node has, all transaction pended on current node, current node url and all node url that have been presented
          schema:
            type: object
            properties:
              chain:
                type: array
              pendingTransactions:
                type: array
              currentNodeUrl:
                type: string
              networkNodes:
                type: rray
  /transaction:
    post:
      tags:
        - mining and synchronizing the network
      summary: add new transaction to their own chain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                sender:
                  type: string
                recipient:
                  type: string
      responses:
        '200':
          description: Success message:Transaction will be added in next block.
          schema:
            type: object
            properties:
              note:
                type: string
  /transaction/broadcast:
    post:
      tags:
        - mining and synchronizing the network
      summary: create new transaction by using reqest and all let the other nodes pend this transaction on their own chain by using '/transaction' post api
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                sender:
                  type: string
                recipient:
                  type: string
      responses:
        '200':
          description: Success message:Transaction created and broadcast successfully
          schema:
            type: object
            properties:
              note:
                type: string
  /mine:
    get:
      tags:
        - mining and synchronizing the network
      summary: proved work successfully, new block is created for reward, and all nodes register this block, and then current node broadcasting new transaction
      responses:
        '200':
          description: Success message:New block mined & broadcast successfully
          schema:
            type: object
            properties:
              note:
                type: string
  /receive-new-block:
    post:
      tags:
        - mining and synchronizing the network
      summary: register new block after verifying that the new block is correct
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                index:
                  type: number
                timestamp:
                  type: number
                transactions:
                  type: array
                nonce:
                  type: number
                hash:
                  type: string
                previousBlockHash:
                  type: string
      responses:
        '200':
          description: Success message:'New block received and accepted.' or 'New block rejected.'
          schema:
            type: object
            properties:
              note:
                type: string
  /register-and-broadcast-node:
    post:
      tags:
        - decentralized network
      summary: register a node and broadcast it the network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newNodeUrl:
                  type: string
      responses:
        '200':
          description: Success message:New node registered with network successfully
          schema:
            type: object
            properties:
              note:
                type: string
  /register-node:
    post:
      tags:
        - decentralized network
      summary: register a node with the network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newNodeUrl:
                  type: string
      responses:
        '200':
          description: Success message:New node registered successfully
          schema:
            type: object
            properties:
              note:
                type: string
  /register-nodes-bulk:
    post:
      tags:
        - decentralized network
      summary: register multiple nodes at once
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newNodeUrl:
                  type: string
      responses:
        '200':
          description: Success message:Bulk registration successful
          schema:
            type: object
            properties:
              note:
                type: string
  /consensus:
    get:
      tags:
        - consensus
      summary: consensus
      responses:
        '200':
          description: Success message:'Current chain has not been replaced.'or'This chain has been replaced.'
          schema:
            type: object
            properties:
              note:
                type: string
  /block/{blockHash}:
    get:
      tags:
        - get specific Info
      summary: get block by blockHash
      parameters:
        - in: path
          name: blockHash
          required: true
          schema:
            type: string
          description: sha256 blockhash
      responses:
        '200':
          description: correct block
          schema:
            type: object
            properties:
              block:
                type: object
  /transaction/{transaction}:
    get:
      tags:
        - get specific Info
      summary: get transaction by transactionId
      parameters:
        - in: path
          name: transaction
          required: true
          schema:
            type: string
          description: uuid transaction id
      responses:
        '200':
          description: correct transaction and pending block info
          schema:
            type: object
            properties:
              transaction:
                type: string
              block:
                type: object
